register.title = Register
register.name = Name
register.dec = Decimal
register.bin = Binary
register.hex = Hexadecimal

alu.title = ALU result
alu.dec = Decimal
alu.bin = Binary
alu.hex = Hexadecimal


simulation.title = Simulation

#action.step.icon = sem/arrow_down.png
action.step.icon = fugue/arrow-skip-270-green.png
action.step.tip = Simulate a single step.
#action.run.icon = sem/arrow_double_down.png
action.run.icon = fugue/arrow-stop-270-green.png
action.run.tip = Simulate until next breakpoint occurs or the end of the program.
#action.reset.icon = sem/arrow_circle_right.png
action.reset.icon = fugue/arrow-circle-225-red.png
action.reset.tip = Resets the machine and the memory to the initial simulation state.

action.init.icon = fugue/control-green.png
action.init.tip = Starts a new simulation.
action.stop.icon = fugue/control-stop-square-red.png
action.stop.tip = Stops the current simulation.

cycles.label = Cycle: {0}
cycles.read.label = Cycle: {0} (read)
cycles.write.label = Cycle: {0} (write)

simulation.wait.title = Simulation is running...
simulation.wait.message = Machine is being simulated until the next breakpoint or the end of the program.

register.update.message = Please enter a new value for register {0}:
register.update.ok = OK
register.update.cancel = Cancel
register.update.swapmode.icon = fugue/arrow-circle-double.png

simulation.running.title = Simulation is running
simulation.running.message = There is a simulation running. Do you want to end the simulation?