register.title = Register
register.name = Name
register.dec = Dezimal
register.bin = Binär
register.hex = Hexadezimal

alu.title = ALU-Ergebnis
alu.dec = Dezimal
alu.bin = Binär
alu.hex = Hexadezimal


simulation.title = Simulation

#action.step.icon = sem/arrow_down.png
action.step.icon = fugue/arrow-skip-270-green.png
action.step.tip = Simuliert einen Einzelschritt.
#action.run.icon = sem/arrow_double_down.png
action.run.icon = fugue/arrow-stop-270-green.png
action.run.tip = Simuliert bis zum n\u00E4chsten Breakpoint oder Programmende.
#action.reset.icon = sem/arrow_circle_right.png
action.reset.icon = fugue/arrow-circle-225-red.png
action.reset.tip = Setzt die Maschine und den Speicher auf den Anfangszustand zur\u00FCck.

action.init.icon = fugue/control-green.png
action.init.tip = Startet eine neue Simulation.
action.stop.icon = fugue/control-stop-square-red.png
action.stop.tip = Beendet die aktuelle Simulation.

cycles.label = Zyklus: {0}
cycles.read.label = Zyklus: {0} (lese)
cycles.write.label = Zyklus: {0} (schreibe)

simulation.wait.title = Simulation l\u00E4uft...
simulation.wait.message = Maschine wird bis zum n\u00E4chsten Breakpoint oder bis zum Verlassen des Mikroprogramms simuliert.

register.update.message = Bitte neuen Wert f\u00FCr Register {0} eingeben:
register.update.ok = OK
register.update.cancel = Abbrechen
register.update.swapmode.icon = fugue/arrow-circle-double.png

simulation.running.title = Simulation l\u00E4uft
simulation.running.message = Es l\u00E4uft gerade eine Simulation. Soll die Simulation beendet werden?